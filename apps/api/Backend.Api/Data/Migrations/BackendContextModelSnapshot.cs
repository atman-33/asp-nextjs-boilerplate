// <auto-generated />
using System;
using Backend.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Api.Data.Migrations
{
    [DbContext(typeof(BackendContext))]
    partial class BackendContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Backend.Api.Features.TodoTypes.Entities.TodoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TodoTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 5, 35, 210, DateTimeKind.Local).AddTicks(9075),
                            Name = "Bug",
                            UpdatedAt = new DateTime(2024, 7, 13, 20, 5, 35, 210, DateTimeKind.Local).AddTicks(9086)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 5, 35, 210, DateTimeKind.Local).AddTicks(9088),
                            Name = "Feature",
                            UpdatedAt = new DateTime(2024, 7, 13, 20, 5, 35, 210, DateTimeKind.Local).AddTicks(9088)
                        });
                });

            modelBuilder.Entity("Backend.Api.Features.Todos.Entities.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TodoTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TodoTypeId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("Backend.Api.Features.Todos.Entities.Todo", b =>
                {
                    b.HasOne("Backend.Api.Features.TodoTypes.Entities.TodoType", "TodoType")
                        .WithMany()
                        .HasForeignKey("TodoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoType");
                });
#pragma warning restore 612, 618
        }
    }
}
